require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe AssignmentsController do
  before(:each) do
    session[:username]   = 'joeuser'
    session[:password]   = 'password'
    session[:account_id] = '100'
    
    @event = stub_model(Event,
                        :id               => 1,
                        :remote_report_id => 654321,
                        :location_id      => 1,
                        :group_id         => 1)
    Event.stub(:find).with("1").and_return(@event)
     
    @group = stub_model(Group,
                        :name                              => "Name",
                        :capacity                          => 1,
                        :can_contain_people                => false,
                        :can_contain_groups                => false,
                        :location_id                       => 1,
                        :comment                           => "MyText",
                        :unique_membership                 => false,
                        :required_membership               => false,
                        :gender_constraint_id              => 1,
                        :label_text                        => "Label Text",
                        :label_text_prepend_to_child_label => false,
                        :label_field                       => 1)
     Group.stub(:find).with(1, {:conditions=>nil}).and_return(@group)
     Group.stub(:find).with(0).and_return(nil)
     
     controller.stub(:remote_registrants).with(any_args).and_return([])
  end

  def mock_assignment(stubs={})
    @mock_assignment ||= mock_model(Assignment, stubs).as_null_object
  end

  describe "GET new" do
    it "assigns a new assignment as @assignment" do
      Assignment.stub(:new) { mock_assignment }
      get :new, :event_id => "1"
      assigns(:assignment).should be(mock_assignment)
    end
  end

  describe "GET edit" do
    it "assigns the requested assignment as @assignment" do
      Assignment.stub(:find).with("37") { mock_assignment }
      get :edit, :id => "37", :event_id => "1"
      assigns(:assignment).should be(mock_assignment)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      before(:each) do
        @params = {'commit'     => '<--',
                   'assignment' => {'person' => 1},
                   'left_side'  => ['group-1']}
      end

      it "render the new template" do
        Assignment.stub(:new) { mock_assignment(:save => true) }
        post :create, :assignment => {}, :event_id => "1"
        response.should render_template("new")
      end
    end

    describe "with invalid params" do
      it "re-renders the 'new' template" do
        Assignment.stub(:new) { mock_assignment(:save => false) }
        post :create, :assignment => {}, :event_id => "1"
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested assignment" do
        Assignment.stub(:find).with("37") { mock_assignment }
        mock_assignment.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :event_id => "1", :assignment => {'these' => 'params'}
      end

      it "assigns the requested assignment as @assignment" do
        Assignment.stub(:find) { mock_assignment(:update_attributes => true) }
        put :update, :id => "1", :event_id => "1"
        assigns(:assignment).should be(mock_assignment)
      end

      it "redirects to the assignment" do
        Assignment.stub(:find) { mock_assignment(:update_attributes => true) }
        put :update, :id => "1", :event_id => "1"
        response.should redirect_to(event_assignment_url(mock_assignment))
      end
    end

    describe "with invalid params" do
      it "assigns the assignment as @assignment" do
        Assignment.stub(:find) { mock_assignment(:update_attributes => false) }
        put :update, :id => "1", :event_id => "1"
        assigns(:assignment).should be(mock_assignment)
      end

      it "re-renders the 'edit' template" do
        Assignment.stub(:find) { mock_assignment(:update_attributes => false) }
        put :update, :id => "1", :event_id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested assignment" do
      Assignment.stub(:find).with("37") { mock_assignment }
      mock_assignment.should_receive(:destroy)
      delete :destroy, :id => "37", :event_id => "1"
    end

    it "redirects to the assignments list" do
      Assignment.stub(:find) { mock_assignment }
      delete :destroy, :id => "1", :event_id => "1"
      response.should redirect_to(event_assignments_url)
    end
  end

end
